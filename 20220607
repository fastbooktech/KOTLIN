package com.example.dobcalc_chapter6

import android.app.DatePickerDialog
import android.icu.util.Calendar
import android.os.Build
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.TextView
import android.widget.Toast
import androidx.annotation.RequiresApi
import java.text.SimpleDateFormat
import java.util.*

//import java.text.SimpleDateFormat
//import java.util.*

//import java.text.SimpleDateFormat
//import java.util.*

@Suppress("RECEIVER_NULLABILITY_MISMATCH_BASED_ON_JAVA_ANNOTATIONS")
class MainActivity : AppCompatActivity() {
    private var tvSelectedDate : TextView? = null
    private var tvAgeInMinutes : TextView? = null
    //errors on clickDatePicker function calling, kotlin had solved
    @RequiresApi(Build.VERSION_CODES.N)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val btnDatePicker: Button = findViewById(R.id.btnDatePicker)
        tvSelectedDate = findViewById(R.id.tvSelectedDate)
        tvAgeInMinutes = findViewById(R.id.tvAgeInMinutes)

        btnDatePicker.setOnClickListener{
            clickDatePicker()
        }
    }
        //errors on making clickDatePicker, kotlin had solved
    @RequiresApi(Build.VERSION_CODES.N)
    //    user made function
    fun clickDatePicker() {
    // user defined values
            val myCalendar = Calendar.getInstance()
            val year = myCalendar.get(Calendar.YEAR)
            val month = myCalendar.get(Calendar.MONTH)
            val day = myCalendar.get(Calendar.DAY_OF_MONTH)
            val dpd = DatePickerDialog(this, { _, selectedYear, selectedMonth, selectedDayOfMonth ->
                Toast.makeText(
                    this,
                    "Input year is $selectedYear, month is ${selectedMonth + 1}, day is $selectedDayOfMonth",
                    Toast.LENGTH_LONG
                ).show()

                val selectedDate = "$selectedYear.${selectedMonth + 1}.$selectedDayOfMonth"
                tvSelectedDate?.text = selectedDate
                val sdf = SimpleDateFormat ("yyyy/MM/dd", Locale.ENGLISH)
                val theDate = sdf.parse(selectedDate)
                theDate?.let{
                    val selectedDateInMinutes = theDate.time/1000/60
                    val currentDate = sdf.parse(sdf.format(System.currentTimeMillis()))
                    currentDate?.let{
                        val currentDateInMinutes = currentDate.time/1000/60
                        val differenceInMinutes =currentDateInMinutes - selectedDateInMinutes
                        tvAgeInMinutes?.text= differenceInMinutes.toString()
                    }

                }
            }, year, month, day)
            dpd.datePicker.maxDate = System.currentTimeMillis()-86400000
            dpd.show()

    }}

